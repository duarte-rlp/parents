# Generated by Django 2.2.12 on 2023-09-13 14:35

from django.db import migrations, models
import django.db.models.deletion
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_group', to='otree.Session')),
            ],
            options={
                'db_table': 'survey_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='survey_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'survey_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('p_age', otree.db.models.IntegerField(null=True, verbose_name='Edad')),
                ('p_sex', otree.db.models.IntegerField(choices=[[0, 'Hombre'], [1, 'Mujer'], [2, 'Otro']], null=True, verbose_name='¿Con qué género se identifica?')),
                ('p_married', otree.db.models.IntegerField(choices=[[1, 'Unión libre'], [2, 'Casado (a)'], [3, 'Viudo (a)'], [4, 'Soltero (a)'], [5, 'Divorciado (a)/Separado(a)']], null=True, verbose_name='Estado civil')),
                ('p_family', otree.db.models.IntegerField(null=True, verbose_name='¿Número de miembros del hogar?')),
                ('p_children', otree.db.models.IntegerField(null=True, verbose_name='¿Número de hijos?')),
                ('p_workers', otree.db.models.IntegerField(null=True, verbose_name='¿Número de personas que contribuyen a los ingresos del hogar?')),
                ('p_educ', otree.db.models.IntegerField(choices=[[1, 'Ninguno'], [2, 'Primaria incompleta'], [3, 'Primaria completa'], [4, 'Bachillerato incompleto'], [5, 'Bachillerato completo'], [6, 'Técnico o Tecnólogo'], [7, 'Pregrado'], [8, 'Posgrado (Especialización, Maestría, Doctorado)']], null=True, verbose_name='¿Cuál es el nivel educativo más alto que cursó o está cursando?')),
                ('p_job', otree.db.models.IntegerField(choices=[[1, 'Solo estudio'], [2, 'Desempleado sin buscar trabajo'], [3, 'Desempleado buscando trabajo'], [4, 'Empleado a jornada parcial'], [5, 'Empleado a jornada completa'], [6, 'Trabajador independiente'], [7, 'Trabajador no remunerado (por ejemplo: ama de casa, empresa familiar)'], [8, 'Retirado o pensionado'], [9, 'Otro / Ninguno']], null=True, verbose_name='¿Cuál es su situación laboral actual?')),
                ('p_inc', otree.db.models.CurrencyField(null=True, verbose_name='¿Cuál es su ingreso mensual promedio?')),
                ('p_inc1', otree.db.models.IntegerField(choices=[[1, 'Menos de $ 300.000'], [2, 'Entre $ 300.000 - $ 600.000'], [3, 'Entre $ 600.000 - $ 900.000'], [4, 'Entre $ 900.000 - $ 1.200.000'], [5, 'Entre $ 1.200.000 - $ 1.500.000'], [6, 'Mayor a $ 1.500.000'], [7, 'Otro / Ninguno']], null=True, verbose_name='¿Es decir que su ingreso mensual promedio se encuentra en un rango de?')),
                ('p_expenses', otree.db.models.IntegerField(choices=[[1, 'Mayores'], [2, 'Menores'], [3, 'Iguales']], null=True, verbose_name='En el último mes los gastos del hogar frente a sus ingresos han sido:')),
                ('p_risk', otree.db.models.IntegerField(null=True, verbose_name='¿Qué tan dispuesto(a) está o no está usted a tomar riesgos en general? (0 - significa nada dispuesto(a), y 10 - significa muy dispuesto(a))')),
                ('p_risk1', otree.db.models.IntegerField(choices=[[1, 'Ningún riesgo'], [2, 'Pequeño riesgo'], [3, 'Medio riesgo'], [4, 'Alto riesgo']], null=True, verbose_name='¿Cuándo estás decidiendo sobre tus inversiones que tanto riesgo estás dispuesto a asumir?')),
                ('p_returns', otree.db.models.IntegerField(null=True, verbose_name='Cuando decide invertir, ¿qué importancia tiene para usted maximizar los retornos? (0 - significa que no es importante, y 10 - significa que es muy importante)')),
                ('p_risk2', otree.db.models.IntegerField(null=True, verbose_name='Cuando decide invertir, ¿qué importancia tiene para usted minimizar los riesgos? (0 - significa que no es importante, y 10 - significa que es muy importante)')),
                ('p_loss', otree.db.models.IntegerField(null=True, verbose_name='Cuando decide invertir, ¿qué importancia tiene para usted minimizar las pérdidas? (0 - significa que no es importante, y 10 - significa que es muy importante)')),
                ('p_insurance', otree.db.models.IntegerField(choices=[[1, 'Sí'], [2, 'No'], [3, 'No lo sé / No me acuerdo']], null=True, verbose_name='Durante los últimos 12 meses, usted o algún miembro de su hogar ha contratado o renovado algún seguro de vida, vehículo, terremoto, robo, desempleo u otro seguro, en forma voluntaria?')),
                ('p_patience', otree.db.models.IntegerField(null=True, verbose_name='¿Es usted generalmente más paciente o impaciente? (0 - significa muy impaciente, y 10 - significa muy paciente)')),
                ('p_hectareas', otree.db.models.IntegerField(choices=[[1, 'Ninguna / No trabajo en finca'], [2, 'Menos de 1 hectárea'], [3, 'Entre 1 - 3 hectáreas'], [4, 'Entre 3 - 5 hectáreas'], [5, 'Entre 5 - 10 hectáreas'], [6, 'Más que 10 hectáreas'], [7, 'No lo sé / No me acuerdo']], null=True, verbose_name='¿Cuánta superficie dedicada a actividades agricolas o pecuarias manejó el año pasado?')),
                ('p_farminc', otree.db.models.IntegerField(choices=[[1, 'Cultivos'], [2, 'Ganado'], [3, 'No lo sé / No me acerdo'], [4, 'No trabajo en finca']], null=True, verbose_name='¿Cuál es la principal fuente de ingresos de la finca en la que trabaja?')),
                ('p_crops', otree.db.models.IntegerField(choices=[[1, 'Sólo un cultivo a la vez'], [2, '2 cultivos al mismo tiempo'], [3, '3 cultivos o más al mismo tiempo'], [4, 'No cultivo ningún cultivo / No lo sé']], null=True, verbose_name='¿Cuando cultiva, cuántos cultivos comerciales diferentes siembra al mismo tiempo?')),
                ('p_crops1', otree.db.models.IntegerField(choices=[[1, 'Aguacate'], [2, 'Arroz'], [3, 'Banano'], [4, 'Cacao'], [5, 'Caña de azúcar'], [6, 'Frijol'], [7, 'Maíz'], [8, 'Pasto'], [9, 'Platano'], [10, 'Otros'], [11, 'No cultivo ningún cultivo / No lo sé']], null=True, verbose_name='¿Qué tipo de cultivos siembró el año pasado? (Puede marcar varias opciones)')),
                ('p_crops3', otree.db.models.IntegerField(choices=[[1, 'Sí, una vez'], [2, 'Sí, más de una vez'], [3, 'No, nunca'], [4, 'No cultivo ningún cultivo / No lo sé']], null=True, verbose_name='¿Alguna vez ha experimentado una pérdida de cosechas?')),
                ('p_savings', otree.db.models.IntegerField(choices=[[1, 'Sí'], [2, 'No'], [3, 'No cultivo ningún cultivo / No lo sé']], null=True, verbose_name='¿Tiene reservas de dinero o cualquier otra forma de ingreso para protegerse contra pérdidas de cosechas?')),
                ('p_climate', otree.db.models.IntegerField(choices=[[1, 'Sí'], [2, 'No'], [3, 'No cultivo ningún cultivo / No lo sé']], null=True, verbose_name='En su opinión, ¿el cambio climático ya ha afectado la producción agrícola?')),
                ('p_events', otree.db.models.IntegerField(choices=[[1, 'Incendios forestales'], [2, 'Inundaciones'], [3, 'Más lluvia de lo habitual'], [4, 'Menos lluvia de lo habitual'], [5, 'Sequías'], [6, 'Temperaturas más altas de lo habitual'], [7, 'Temperaturas más bajas de lo habitual'], [8, 'Terremotos/Temblores'], [9, 'Otros desastres naturales'], [10, 'Ningún problema'], [11, 'No lo sé / No me acuerdo']], null=True, verbose_name='Durante los últimos 12 meses, ¿en esta zona o vecindario se presentaron algunos de los siguientes problemas? (Puede marcar varias opciones)')),
                ('p_measures', otree.db.models.IntegerField(choices=[[1, 'Disponer de los ahorros'], [2, 'Endeudarse'], [3, 'Pedir ayuda a un conocido del barrio-vereda'], [4, 'Pedir ayuda a un familiar'], [5, 'Vender un activo'], [6, 'No podria hacer nada y tendría que reducir el consumo']], null=True, verbose_name='¿Si estos eventos afectarán negativamente a su hogar, qué medidas tomaría?')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Subsession')),
            ],
            options={
                'db_table': 'survey_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Subsession'),
        ),
    ]
